package com.ufg.notificacoes.dao;

import java.util.ArrayList;
import java.util.List;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

import com.ufg.notificacoes.bean.GrupoEnvio;

public class GrupoEnvioDao extends SQLiteOpenHelper{

	private static final int VERSAO = 1;
	private static final String TABELA = "Disciplina";
	private static final String DATABASE = "NotificacoesUFG";
	
	private static final String TAG = "CADASTRO_DISCIPLINAS";
	
	public GrupoEnvioDao(){
		super(null, DATABASE, null, VERSAO);
	}
	
	public GrupoEnvioDao(Context context){
		super(context, DATABASE, null, VERSAO);
	}
			
	public GrupoEnvioDao(Context context, String name, CursorFactory factory, int version) {
		super(context, name, factory, version);
	}

	@Override
	public void onCreate(SQLiteDatabase db) {
		String ddl = "CREATE TABLE " + TABELA + "( id INTEGER PRIMARY KEY, "
				+ "nome TEXT, codigo TEXT, )";
		db.execSQL(ddl);
	}

	@Override
	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
		String sql = "DROP TABLE IF EXISTS " + TABELA;
		db.execSQL(sql);
		onCreate(db);
	}
	
	public List<GrupoEnvio> listar(){
		
		List<GrupoEnvio> lista = new ArrayList<GrupoEnvio>();
		
		String sql = "SELECT id, nome FROM " + TABELA + " ORDER BY nome ";
		
		Cursor cursor = getReadableDatabase().rawQuery(sql, null);
		
		try{
			while(cursor.moveToNext()){
				GrupoEnvio disciplina = new GrupoEnvio();
				
				disciplina.setId(cursor.getLong(0));
				disciplina.setNome(cursor.getString(1));
				
				lista.add(disciplina);
			}
		}catch(SQLException e){
			Log.e(TAG, e.getMessage());
		}finally{
			cursor.close();
		}
		
		Log.i(TAG, "LISTANDO DISCIPLINAS");
		return lista;
	}
	
	public void cadastrar(GrupoEnvio disciplina){
		
		ContentValues values = new ContentValues();
		
		values.put("nome", disciplina.getNome());
		
		getWritableDatabase().insert(TABELA, null, values);
		Log.i(TAG, "DISCIPLINA CADASTRADA!");
	}
}
